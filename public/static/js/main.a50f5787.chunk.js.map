{"version":3,"sources":["components/Launch.js","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","logo.png","App.js","reportWebVitals.js","index.js"],"names":["LAUNCH_QUERY","gql","Launch","flight_number","useParams","parseInt","query","variables","loading","error","data","console","log","launch","mission_name","launch_success","launch_year","rocket","rocket_name","rocket_type","rocket_id","className","classNames","to","LaunchItem","launch_date_local","format","MissionKey","style","marginRight","LAUNCHES_QUERY","Launches","launches","map","index","client","ApolloClient","uri","App","src","logo","alt","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAMMA,EAAeC,YAAH,0SA6EHC,EA7DA,WAAO,IACfC,EAAkBC,cAAlBD,cAGN,OAFAA,EAAgBE,SAASF,GAGxB,cAAC,WAAD,UACC,cAAC,IAAD,CAAOG,MAAON,EAAcO,UAAW,CAAEJ,iBAAzC,SACE,YAA+B,IAA5BK,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACnB,GAAIF,EAAS,OAAO,4CAChBC,GAAOE,QAAQC,IAAIH,GAFO,MAU1BC,EAAKG,OALRC,EAL6B,EAK7BA,aACAX,EAN6B,EAM7BA,cACAY,EAP6B,EAO7BA,eACAC,EAR6B,EAQ7BA,YAR6B,IAS7BC,OAAUC,EATmB,EASnBA,YAAaC,EATM,EASNA,YAAaC,EATP,EASOA,UAGrC,OACC,gCACC,qBAAIC,UAAU,iBAAd,UACC,sBAAMA,UAAU,YAAhB,sBADD,IAC8CP,KAE9C,oBAAIO,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACC,qBAAIA,UAAU,kBAAd,4BACiBlB,KAEjB,qBAAIkB,UAAU,kBAAd,0BAA8CL,KAC9C,qBAAIK,UAAU,kBAAd,+BACoB,IACnB,sBACCA,UAAWC,IAAW,CACrB,eAAgBP,EAChB,eAAgBA,IAHlB,SAMEA,EAAiB,MAAQ,UAG5B,qBAAIM,UAAU,kBAAd,4BACiBlB,QAGlB,oBAAIkB,UAAU,OAAd,4BACA,qBAAIA,UAAU,aAAd,UACC,qBAAIA,UAAU,kBAAd,wBAA4CD,KAC5C,qBAAIC,UAAU,kBAAd,0BAA8CH,KAC9C,qBAAIG,UAAU,kBAAd,0BAA8CF,QAE1B,uBACA,cAAC,IAAD,CAAMI,GAAG,IAAIF,UAAU,oBAAvB,8B,iBCvCbG,EA9BI,SAAC,GAEb,IAAD,IADLX,OAAUV,EACL,EADKA,cAAeW,EACpB,EADoBA,aAAcW,EAClC,EADkCA,kBAAmBV,EACrD,EADqDA,eAE1D,OACC,qBAAKM,UAAU,uBAAf,SACC,sBAAKA,UAAU,MAAf,UACC,sBAAKA,UAAU,WAAf,UACC,yCACS,IACR,sBACCA,UAAWC,IAAW,CACrB,eAAgBP,EAChB,eAAgBA,IAHlB,SAMED,OAGH,sCACM,cAAC,IAAD,CAAQY,OAAO,mBAAf,SAAmCD,UAG1C,qBAAKJ,UAAU,WAAf,SACC,cAAC,IAAD,CAAME,GAAE,kBAAapB,GAAiBkB,UAAU,oBAAhD,oCCXUM,EAfI,WAClB,OACC,sBAAKN,UAAU,OAAf,UACC,8BACC,sBAAMA,UAAU,uBAAuBO,MAAO,CAAEC,YAAa,SAAY,IAD1E,eAIA,8BACC,sBAAMR,UAAU,sBAAsBO,MAAO,CAAEC,YAAa,SAAY,IADzE,kBCHGC,EAAiB7B,YAAH,yKAiCL8B,EAtBE,WAChB,OACC,eAAC,WAAD,WACU,oBAAIV,UAAU,iBAAd,sBACA,cAAC,EAAD,IACT,cAAC,IAAD,CAAOf,MAAOwB,EAAd,SACE,YAA+B,IAA5BtB,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,KACnB,OAAIF,EAAgB,6CAChBC,GAAOE,QAAQC,IAAIH,GAEtB,cAAC,WAAD,UACEC,EAAKsB,SAASC,KAAI,SAACpB,EAAQqB,GAAT,OAClB,cAAC,EAAD,CAAwBrB,OAAQA,GAAfqB,gBC7BV,MAA0B,iCCQnCC,EAAS,IAAIC,IAAa,CAC/BC,IAAK,aAmBSC,EAhBH,WACX,OACC,cAAC,IAAD,CAAgBH,OAAQA,EAAxB,SACC,cAAC,IAAD,UACC,sBAAKd,UAAU,YAAf,UACC,qBAAKkB,IAAKC,EAAMC,IAAI,WACpB,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,yBAAyBC,QAAS,cAAC,EAAD,iBCRrCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.a50f5787.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\n\nconst LAUNCH_QUERY = gql`\n\tquery LaunchQuery($flight_number: Int!) {\n\t\tlaunch(flight_number: $flight_number) {\n\t\t\tflight_number\n\t\t\tmission_name\n\t\t\tlaunch_success\n\t\t\tlaunch_year\n\t\t\trocket {\n\t\t\t\trocket_id\n\t\t\t\trocket_name\n\t\t\t\trocket_type\n\t\t\t}\n\t\t}\n\t}\n`;\n\nconst Launch = () => {\n\tlet { flight_number } = useParams();\n\tflight_number = parseInt(flight_number);\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<Query query={LAUNCH_QUERY} variables={{ flight_number }}>\n\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\tif (loading) return <h4>Loading...</h4>;\n\t\t\t\t\tif (error) console.log(error);\n\n\t\t\t\t\tconst {\n\t\t\t\t\t\tmission_name,\n\t\t\t\t\t\tflight_number,\n\t\t\t\t\t\tlaunch_success,\n\t\t\t\t\t\tlaunch_year,\n\t\t\t\t\t\trocket: { rocket_name, rocket_type, rocket_id },\n\t\t\t\t\t} = data.launch;\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h1 className='display-4 my-3'>\n\t\t\t\t\t\t\t\t<span className='text-dark'>Mission:</span> {mission_name}\n\t\t\t\t\t\t\t</h1>\n\t\t\t\t\t\t\t<h4 className='mb-3'>Launch Details</h4>\n\t\t\t\t\t\t\t<ul className='list-group'>\n\t\t\t\t\t\t\t\t<li className='list-group-item'>\n\t\t\t\t\t\t\t\t\tFlight Number: {flight_number}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='list-group-item'>Launch Year: {launch_year}</li>\n\t\t\t\t\t\t\t\t<li className='list-group-item'>\n\t\t\t\t\t\t\t\t\tLaunch Successful:{' '}\n\t\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t\t\t\t'text-success': launch_success,\n\t\t\t\t\t\t\t\t\t\t\t'text-danger': !launch_success,\n\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t{launch_success ? 'Yes' : 'No'}\n\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li className='list-group-item'>\n\t\t\t\t\t\t\t\t\tFlight Number: {flight_number}\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<h4 className='my-3'>Rocket Details</h4>\n\t\t\t\t\t\t\t<ul className='list-group'>\n\t\t\t\t\t\t\t\t<li className='list-group-item'>Rocket ID: {rocket_id}</li>\n\t\t\t\t\t\t\t\t<li className='list-group-item'>Rocket Name: {rocket_name}</li>\n\t\t\t\t\t\t\t\t<li className='list-group-item'>Rocket Type: {rocket_type}</li>\n                            </ul>\n                            <hr />\n                            <Link to=\"/\" className=\"btn btn-secondary\">Go Back</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t</Fragment>\n\t);\n};\n\nexport default Launch;\n","import React from 'react';\nimport classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\n\nconst LaunchItem = ({\n\tlaunch: { flight_number, mission_name, launch_date_local, launch_success },\n}) => {\n\treturn (\n\t\t<div className='cards card-body mb-3'>\n\t\t\t<div className='row'>\n\t\t\t\t<div className='col-md-9'>\n\t\t\t\t\t<h4>\n\t\t\t\t\t\tMission{' '}\n\t\t\t\t\t\t<span\n\t\t\t\t\t\t\tclassName={classNames({\n\t\t\t\t\t\t\t\t'text-success': launch_success,\n\t\t\t\t\t\t\t\t'text-danger': !launch_success,\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{mission_name}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</h4>\n\t\t\t\t\t<p>\n\t\t\t\t\t\tDate <Moment format=\"YYYY-MM-DD HH:mm\">{launch_date_local}</Moment>\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t\t<div className='col-md-3'>\n\t\t\t\t\t<Link to={`/launch/${flight_number}`} className='btn btn-secondary'>Launch Details</Link>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default LaunchItem;\n","import React from 'react';\n\nconst MissionKey = () => {\n\treturn (\n\t\t<div className='my-3'>\n\t\t\t<p>\n\t\t\t\t<span className='px-3 mr-2 bg-success' style={{ marginRight: '3px' }} />{' '}\n\t\t\t\t= Success\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\t<span className='px-3 mr-2 bg-danger' style={{ marginRight: '3px' }} />{' '}\n\t\t\t\t= Danger\n\t\t\t</p>\n\t\t</div>\n\t);\n};\n\nexport default MissionKey;\n","import React, { Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport LaunchItem from './LaunchItem';\nimport MissionKey from './MissionKey';\n\nconst LAUNCHES_QUERY = gql`\n\tquery LaunchesQuery {\n\t\tlaunches {\n\t\t\tflight_number\n\t\t\tmission_name\n\t\t\tlaunch_date_local\n\t\t\tlaunch_success\n\t\t}\n\t}\n`;\n\nconst Launches = () => {\n\treturn (\n\t\t<Fragment>\n            <h1 className='display-4 my-3'>Launches</h1>\n            <MissionKey />\n\t\t\t<Query query={LAUNCHES_QUERY}>\n\t\t\t\t{({ loading, error, data }) => {\n\t\t\t\t\tif (loading) return <h4>Loading...</h4>;\n\t\t\t\t\tif (error) console.log(error);\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Fragment>\n\t\t\t\t\t\t\t{data.launches.map((launch, index) => (\n\t\t\t\t\t\t\t\t<LaunchItem key={index} launch={launch} />\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Fragment>\n\t\t\t\t\t);\n\t\t\t\t}}\n\t\t\t</Query>\n\t\t</Fragment>\n\t);\n};\n\nexport default Launches;\n","export default __webpack_public_path__ + \"static/media/logo.91169fa6.png\";","import ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Launch from './components/Launch';\nimport Launches from './components/Launches';\nimport logo from './logo.png';\n\nconst client = new ApolloClient({\n\turi: '/graphql',\n});\n\nconst App = () => {\n\treturn (\n\t\t<ApolloProvider client={client}>\n\t\t\t<Router>\n\t\t\t\t<div className='container'>\n\t\t\t\t\t<img src={logo} alt='SpaceX' />\n\t\t\t\t\t<Routes>\n\t\t\t\t\t\t<Route path='/' element={<Launches />} />\n\t\t\t\t\t\t<Route path='/launch/:flight_number' element={<Launch />} />\n\t\t\t\t\t</Routes>\n\t\t\t\t</div>\n\t\t\t</Router>\n\t\t</ApolloProvider>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}